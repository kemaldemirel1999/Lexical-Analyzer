Next token is RES_WORD		Next lexeme is program
Next token is identifier	Next lexeme is sample1
Next token is RES_WORD		Next lexeme is var
Next token is identifier	Next lexeme is a
Next token is COMMA		Next lexeme is ,
Next token is identifier	Next lexeme is b
Next token is COMMA		Next lexeme is ,
Next token is identifier	Next lexeme is temp
Next token is COMMA		Next lexeme is ,
Next token is UNKNOWN		Next lexeme is istanbul123456789
Next token is COLON		Next lexeme is :
Next token is RES_WORD		Next lexeme is integer
Next token is SEMICOLON		Next lexeme is ;
Next token is identifier	Next lexeme is a
Next token is ASSIGNM		Next lexeme is :=
Next token is INT_LIT		Next lexeme is 67
Next token is SEMICOLON		Next lexeme is ;
Next token is identifier	Next lexeme is b
Next token is ASSIGNM		Next lexeme is :=
Next token is INT_LIT		Next lexeme is 66
Next token is SEMICOLON		Next lexeme is ;
Next token is RES_WORD		Next lexeme is if
Next token is LPARANT		Next lexeme is (
Next token is identifier	Next lexeme is a
Next token is GRE_EQ		Next lexeme is >=
Next token is identifier	Next lexeme is b
Next token is RPARANT		Next lexeme is )
Next token is RES_WORD		Next lexeme is then
Next token is identifier	Next lexeme is temp
Next token is ASSIGNM		Next lexeme is :=
Next token is INT_LIT		Next lexeme is 100
Next token is SEMICOLON		Next lexeme is ;
Next token is RES_WORD		Next lexeme is else
Next token is RES_WORD		Next lexeme is begin
Next token is identifier	Next lexeme is temp
Next token is ASSIGNM		Next lexeme is :=
Next token is INT_LIT		Next lexeme is 200
Next token is SEMICOLON		Next lexeme is ;
Next token is identifier	Next lexeme is a
Next token is ASSIGNM		Next lexeme is :=
Next token is LPARANT		Next lexeme is (
Next token is identifier	Next lexeme is a
Next token is ADD		Next lexeme is +
Next token is identifier	Next lexeme is b
Next token is RPARANT		Next lexeme is )
Next token is MULT		Next lexeme is *
Next token is identifier	Next lexeme is temp
Next token is DIV		Next lexeme is /
Next token is LPARANT		Next lexeme is (
Next token is INT_LIT		Next lexeme is 10
Next token is DIV		Next lexeme is /
Next token is INT_LIT		Next lexeme is 2
Next token is RPARANT		Next lexeme is )
Next token is SEMICOLON		Next lexeme is ;
Next token is identifier	Next lexeme is b
Next token is ASSIGNM		Next lexeme is :=
Next token is identifier	Next lexeme is b
Next token is DIV		Next lexeme is /
Next token is INT_LIT		Next lexeme is 33
Next token is SEMICOLON		Next lexeme is ;
Next token is RES_WORD		Next lexeme is end
Next token is RES_WORD		Next lexeme is while
Next token is LPARANT		Next lexeme is (
Next token is identifier	Next lexeme is a
Next token is SUBT		Next lexeme is -
Next token is identifier	Next lexeme is b
Next token is GREATER		Next lexeme is >
Next token is INT_LIT		Next lexeme is 0
Next token is RPARANT		Next lexeme is )
Next token is RES_WORD		Next lexeme is begin
Next token is identifier	Next lexeme is temp
Next token is ASSIGNM		Next lexeme is :=
Next token is identifier	Next lexeme is temp
Next token is ADD		Next lexeme is +
Next token is INT_LIT		Next lexeme is 1
Next token is SEMICOLON		Next lexeme is ;
Next token is RES_WORD		Next lexeme is end
Next token is RES_WORD		Next lexeme is end
Next token is EOF		Next lexeme is end of file
